service: auction-service

frameworkVersion: '2'

plugins:
  # - serverless-bundle
  - serverless-pseudo-parameters # parameter references for aws stuff
  - serverless-offline

provider:
  name: aws
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  environment: ${file(serverless.env.yml):${opt:stage, self:provider.stage}}
  runtime: nodejs12.x
  region: us-east-1
  iamRoleStatements:
    - ${file(iam/iam.yml):AuctionsTableIAM}

# extra resources created using cloud formation
resources:
  Resources:
    # the specific resource's id - must be unique
    AuctionsTable: ${file(resources/resources.yml):AuctionsTable}


functions:
  # test function
  hello:
    name: hello-${opt:stage}
    handler: src/handlers/hello.handler
    events:
      - http:
          method: GET
          path: /hello

  createAuction:
    name: createAuction-${opt:stage}
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction

  getAuctions:
    name: getAuctions-${opt:stage}
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions

  getAuction:
    name: getAuction-${opt:stage}
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}

  placeBid:
    name: placeBid-${opt:stage}
    handler: src/handlers/placeBid.handler
    events:
      - http:
        # post used to create, patch to update an auction
          method: PATCH
          path: /auction/{id}/bid

  processAuctions:
    name: processAuctions-${opt:stage}
    handler: src/handlers/processAuctions.handler
    # schedule an event to run every minute
    # events:
    #   - schedule: rate(1 minute)

# custom variables that are not a part of the main sls framework, we can define anything we want here
custom:
  # this tells the serverless-bundle plugin to not perform linting
  bundle:
    linting: false